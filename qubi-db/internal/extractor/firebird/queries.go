package firebird

// SQL queries for extracting schema information from Firebird

const (
	// Query to get all user tables (excluding system tables)
	queryTables = `
		SELECT TRIM(r.RDB$RELATION_NAME) as TABLE_NAME
		FROM RDB$RELATIONS r
		WHERE r.RDB$SYSTEM_FLAG = 0 
		  AND r.RDB$RELATION_TYPE = 0
		  AND r.RDB$RELATION_NAME NOT STARTING WITH 'RDB$'
		  AND r.RDB$RELATION_NAME NOT STARTING WITH 'MON$'
		ORDER BY r.RDB$RELATION_NAME`

	// Query to get columns for a specific table
	queryColumns = `
		SELECT 
			TRIM(rf.RDB$FIELD_NAME) as COLUMN_NAME,
			TRIM(f.RDB$FIELD_TYPE) as FIELD_TYPE,
			f.RDB$FIELD_LENGTH,
			f.RDB$FIELD_PRECISION,
			f.RDB$FIELD_SCALE,
			rf.RDB$NULL_FLAG,
			TRIM(rf.RDB$DEFAULT_SOURCE) as DEFAULT_VALUE,
			f.RDB$FIELD_SUB_TYPE
		FROM RDB$RELATION_FIELDS rf
		JOIN RDB$FIELDS f ON rf.RDB$FIELD_SOURCE = f.RDB$FIELD_NAME
		WHERE rf.RDB$RELATION_NAME = ?
		ORDER BY rf.RDB$FIELD_POSITION`

	// Query to get primary key constraints
	queryPrimaryKeys = `
		SELECT 
			TRIM(rc.RDB$CONSTRAINT_NAME) as CONSTRAINT_NAME,
			TRIM(s.RDB$FIELD_NAME) as COLUMN_NAME
		FROM RDB$RELATION_CONSTRAINTS rc
		JOIN RDB$INDEX_SEGMENTS s ON rc.RDB$INDEX_NAME = s.RDB$INDEX_NAME
		WHERE rc.RDB$RELATION_NAME = ?
		  AND rc.RDB$CONSTRAINT_TYPE = 'PRIMARY KEY'
		ORDER BY s.RDB$FIELD_POSITION`

	// Query to get foreign key constraints (compatible with older Firebird versions)
	queryForeignKeys = `
		SELECT 
			TRIM(rc.RDB$CONSTRAINT_NAME) as CONSTRAINT_NAME,
			TRIM(s.RDB$FIELD_NAME) as COLUMN_NAME,
			TRIM(rc2.RDB$RELATION_NAME) as REFERENCED_TABLE,
			TRIM(s2.RDB$FIELD_NAME) as REFERENCED_COLUMN
		FROM RDB$RELATION_CONSTRAINTS rc
		JOIN RDB$INDEX_SEGMENTS s ON rc.RDB$INDEX_NAME = s.RDB$INDEX_NAME
		JOIN RDB$REF_CONSTRAINTS refc ON rc.RDB$CONSTRAINT_NAME = refc.RDB$CONSTRAINT_NAME
		JOIN RDB$RELATION_CONSTRAINTS rc2 ON refc.RDB$CONST_NAME_UQ = rc2.RDB$CONSTRAINT_NAME
		JOIN RDB$INDEX_SEGMENTS s2 ON rc2.RDB$INDEX_NAME = s2.RDB$INDEX_NAME
		WHERE rc.RDB$RELATION_NAME = ?
		  AND rc.RDB$CONSTRAINT_TYPE = 'FOREIGN KEY'
		ORDER BY rc.RDB$CONSTRAINT_NAME, s.RDB$FIELD_POSITION`

	// Query to get all user views
	queryViews = `
		SELECT 
			TRIM(r.RDB$RELATION_NAME) as VIEW_NAME,
			r.RDB$VIEW_SOURCE as VIEW_DEFINITION
		FROM RDB$RELATIONS r
		WHERE r.RDB$SYSTEM_FLAG = 0 
		  AND r.RDB$RELATION_TYPE = 1
		  AND r.RDB$RELATION_NAME NOT STARTING WITH 'RDB$'
		  AND r.RDB$RELATION_NAME NOT STARTING WITH 'MON$'
		ORDER BY r.RDB$RELATION_NAME`

	// Query to get stored procedures
	queryProcedures = `
		SELECT 
			TRIM(p.RDB$PROCEDURE_NAME) as PROCEDURE_NAME,
			p.RDB$PROCEDURE_SOURCE as PROCEDURE_SOURCE
		FROM RDB$PROCEDURES p
		WHERE p.RDB$SYSTEM_FLAG = 0
		ORDER BY p.RDB$PROCEDURE_NAME`

	// Query to get procedure parameters
	queryProcedureParameters = `
		SELECT 
			TRIM(pp.RDB$PARAMETER_NAME) as PARAMETER_NAME,
			pp.RDB$PARAMETER_TYPE as PARAMETER_TYPE,
			TRIM(f.RDB$FIELD_TYPE) as FIELD_TYPE,
			f.RDB$FIELD_LENGTH,
			f.RDB$FIELD_PRECISION,
			f.RDB$FIELD_SCALE
		FROM RDB$PROCEDURE_PARAMETERS pp
		JOIN RDB$FIELDS f ON pp.RDB$FIELD_SOURCE = f.RDB$FIELD_NAME
		WHERE pp.RDB$PROCEDURE_NAME = ?
		ORDER BY pp.RDB$PARAMETER_NUMBER`

	// Query to get functions (Firebird 3.0+)
	queryFunctions = `
		SELECT 
			TRIM(f.RDB$FUNCTION_NAME) as FUNCTION_NAME,
			f.RDB$FUNCTION_SOURCE as FUNCTION_SOURCE,
			TRIM(f.RDB$RETURN_ARGUMENT) as RETURN_TYPE
		FROM RDB$FUNCTIONS f
		WHERE f.RDB$SYSTEM_FLAG = 0
		ORDER BY f.RDB$FUNCTION_NAME`

	// Query to get indexes
	queryIndexes = `
		SELECT 
			TRIM(i.RDB$INDEX_NAME) as INDEX_NAME,
			TRIM(i.RDB$RELATION_NAME) as TABLE_NAME,
			i.RDB$UNIQUE_FLAG,
			TRIM(s.RDB$FIELD_NAME) as COLUMN_NAME,
			s.RDB$FIELD_POSITION
		FROM RDB$INDICES i
		JOIN RDB$INDEX_SEGMENTS s ON i.RDB$INDEX_NAME = s.RDB$INDEX_NAME
		WHERE i.RDB$SYSTEM_FLAG = 0
		  AND i.RDB$INDEX_NAME NOT STARTING WITH 'RDB$'
		  AND i.RDB$RELATION_NAME NOT STARTING WITH 'RDB$'
		  AND i.RDB$RELATION_NAME NOT STARTING WITH 'MON$'
		ORDER BY i.RDB$INDEX_NAME, s.RDB$FIELD_POSITION`

	// Query to get generators/sequences
	queryGenerators = `
		SELECT 
			TRIM(g.RDB$GENERATOR_NAME) as GENERATOR_NAME,
			g.RDB$GENERATOR_ID as GENERATOR_VALUE
		FROM RDB$GENERATORS g
		WHERE g.RDB$SYSTEM_FLAG = 0
		ORDER BY g.RDB$GENERATOR_NAME`

	// Query to get domains
	queryDomains = `
		SELECT 
			TRIM(f.RDB$FIELD_NAME) as DOMAIN_NAME,
			f.RDB$FIELD_TYPE,
			f.RDB$FIELD_LENGTH,
			f.RDB$FIELD_PRECISION,
			f.RDB$FIELD_SCALE,
			TRIM(f.RDB$VALIDATION_SOURCE) as CHECK_CONSTRAINT
		FROM RDB$FIELDS f
		WHERE f.RDB$FIELD_NAME NOT STARTING WITH 'RDB$'
		  AND f.RDB$FIELD_NAME NOT STARTING WITH 'MON$'
		  AND f.RDB$SYSTEM_FLAG = 0
		ORDER BY f.RDB$FIELD_NAME`
)